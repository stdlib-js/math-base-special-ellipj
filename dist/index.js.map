{
  "version": 3,
  "sources": ["../lib/assign.js", "../lib/main.js", "../lib/sn.js", "../lib/cn.js", "../lib/dn.js", "../lib/am.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar sincos = require( '@stdlib/math-base-special-sincos' ).assign;\nvar ellipk = require( '@stdlib/math-base-special-ellipk' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar cosh = require( '@stdlib/math-base-special-cosh' );\nvar sinh = require( '@stdlib/math-base-special-sinh' );\nvar tanh = require( '@stdlib/math-base-special-tanh' );\nvar atan = require( '@stdlib/math-base-special-atan' );\nvar asin = require( '@stdlib/math-base-special-asin' );\nvar sin = require( '@stdlib/math-base-special-sin' );\nvar cos = require( '@stdlib/math-base-special-cos' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar SQRT_EPS = require( '@stdlib/constants-float64-sqrt-eps' );\nvar EPS = require( '@stdlib/constants-float64-eps' );\nvar PI = require( '@stdlib/constants-float64-pi' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'elilpj:assign' );\nvar tmp4 = [ 0.0, 0.0, 0.0, 0.0 ];\nvar tmp2 = [ 0.0, 0.0 ];\nvar ca = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Computes the Jacobi elliptic functions sn, cn, dn, and Jacobi amplitude am.\n*\n* @param {number} u - input value\n* @param {number} m - modulus `m`, equivalent to `k\u00B2`\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var v = assign( 0.3, 0.5, [ 0.0, 0.0, 0.0, 0.0 ], 1, 0 );\n* // returns [ ~0.293, ~0.956, ~0.978, ~0.298 ]\n*\n* @example\n* v = assign( 0.0, 0.0, [ 0.0, 0.0, 0.0, 0.0 ], 1, 0 );\n* // returns [ ~0.0, ~1.0, ~1.0, ~0.0 ]\n*\n* @example\n* v = assign( Infinity, 1.0, [ 0.0, 0.0, 0.0, 0.0 ], 1, 0 );\n* // returns [ ~1.0, ~0.0, ~0.0, ~1.571 ]\n*\n* @example\n* v = assign( 0.0, -2.0, [ 0.0, 0.0, 0.0, 0.0 ], 1, 0 );\n* // returns [ ~0.0, ~1.0, ~1.0, NaN ]\n*\n* @example\n* v = assign( NaN, NaN, [ 0.0, 0.0, 0.0, 0.0 ], 1, 0 );\n* // returns [ NaN, NaN, NaN, NaN ]\n*/\nfunction assign(u, m, out, stride, offset) {\n\tvar dnDenom;\n\tvar NANFLG;\n\tvar uK2cen;\n\tvar k1inv;\n\tvar sechu;\n\tvar sinhu;\n\tvar tanhu;\n\tvar phi0;\n\tvar phi1;\n\tvar atmp;\n\tvar FLG;\n\tvar gdu;\n\tvar uK2;\n\tvar uK4;\n\tvar mu;\n\tvar K2;\n\tvar K4;\n\tvar u0;\n\tvar sn;\n\tvar cn;\n\tvar dn;\n\tvar am;\n\tvar k;\n\tvar s;\n\tvar c;\n\tvar f;\n\tvar a;\n\tvar b;\n\tvar N;\n\n\tif ( m < 0.0 ) {\n\t\t// A&S 16.10.1 for a negative parameter, mapping -m to 0 < mu < 1\n\t\tmu = -m / ( 1.0 - m );\n\t\tk1inv = sqrt( 1.0 - m );\n\t\tassign( u * k1inv, mu, tmp4, 1, 0 );\n\t\tsn = ( tmp4[ 0 ] / tmp4[ 2 ] ) / k1inv;\n\t\tcn = tmp4[ 1 ] / tmp4[ 2 ];\n\t\tdn = 1.0 / tmp4[ 2 ];\n\t\tam = NaN;\n\t} else if ( m > 1.0 ) {\n\t\t// A&S 16.11.1 for reciprocal parameter, mapping m > 1 to 0 < mu < 1\n\t\tk = sqrt( m );\n\t\tassign( u * k, 1.0 / m, tmp4, 1, 0 );\n\t\tsn = tmp4[ 0 ] / k;\n\t\tcn = tmp4[ 2 ];\n\t\tdn = tmp4[ 1 ];\n\t\tam = NaN;\n\t} else if ( m === 0.0 ) {\n\t\t// A&S table 16.6, limiting case m = 0: circular trigonometric functions\n\t\tsincos( u, tmp2, 1, 0 );\n\t\tsn = tmp2[ 0 ];\n\t\tcn = tmp2[ 1 ];\n\t\tdn = 1.0;\n\t\tam = u;\n\t} else if ( m === 1.0 ) {\n\t\t// A&S table 16.6: limiting case m = 1: hyperbolic functions\n\t\tsn = tanh( u );\n\t\tcn = 1.0 / cosh( u );\n\t\tdn = cn;\n\t\tam = atan( sinh( u ) );\n\t} else if ( m < SQRT_EPS ) {\n\t\t// A&S 16.13.1 for small-u approximations. Additionally, compute K at extra cost in order to ensure returned values are correct outside the range [0, K].\n\t\tK4 = 4.0 * ellipk( m );\n\t\tu0 = ( ( u % K4 ) + K4 ) % K4;\n\t\tsincos( u0, tmp2, 1, 0 );\n\t\ts = tmp2[ 0 ];\n\t\tc = tmp2[ 1 ];\n\t\tf = 0.25 * m * ( u0 - ( s * c ) );\n\t\tsn = s - ( f * c );\n\t\tcn = c + ( f * s );\n\t\tdn = 1.0 - ( 0.5 * m * s * s );\n\t\tam = u - ( 0.25 * m * ( u - ( s * c ) ) );\n\t} else if ( m > 1.0 - SQRT_EPS ) {\n\t\t// A&S 16.15.1 - 16.15.4 for near-unity approximations. Additionally, compute K at extra cost so that we may reflect as needed to ensure the returned values are correct.\n\n\t\t// Reduce by the half-period 2K, centered about u = 0\n\t\tK2 = ellipk( m ) * 2.0;\n\t\tuK2cen = ( u / K2 ) + 0.5;\n\t\tuK2 = K2 * ( ( uK2cen % 1.0 ) - 0.5 );\n\n\t\t// Flip sn and cn in this range to get the reflections correct. We must be careful about precisely reusing uK2cen in order to get the edge cases correct.\n\t\tuK4 = uK2cen % 4;\n\t\tFLG = uK4 >= 1.0 && uK4 < 2.0;\n\n\t\tsinhu = sinh( uK2 );\n\t\tsechu = 1.0 / cosh( uK2 );\n\t\ttanhu = tanh( uK2 );\n\t\tgdu = ( floor( uK2cen ) * PI ) + atan( sinhu );\n\n\t\ta = 0.25 * ( 1.0 - m );\n\t\tb = a * ( sinhu - ( uK2 * sechu ) );\n\t\tsn = tanhu + ( b * sechu );\n\t\tcn = sechu - ( b * tanhu );\n\t\tdn = sechu + ( a * ( sinhu + ( uK2 * sechu ) ) * tanhu );\n\t\tam = gdu + b;\n\n\t\tif (FLG) {\n\t\t\tsn = -sn;\n\t\t\tcn = -cn;\n\t\t}\n\t} else {\n\t\t// A&S 16.4.1. Compute using the arithmetic-geometric mean.\n\t\ta = 1.0;\n\t\tb = sqrt( 1.0 - m );\n\t\tN = -1;\n\t\tNANFLG = false;\n\t\tdo {\n\t\t\tN += 1;\n\t\t\tif ( N > 8 ) {\n\t\t\t\tNANFLG = true;\n\t\t\t\tsn = NaN;\n\t\t\t\tcn = NaN;\n\t\t\t\tdn = NaN;\n\t\t\t\tam = NaN;\n\n\t\t\t\tdebug( 'Warning: Overflow encountered in iteration. Returning NaN for all output values.' );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tatmp = ( a + b ) * 0.5;\n\t\t\tc = ( a - b ) * 0.5;\n\t\t\tb = sqrt( a * b );\n\t\t\ta = atmp;\n\t\t\tca[ N ] = c / a;\n\t\t} while ( ca[ N ] >= EPS );\n\n\t\tif ( !NANFLG ) {\n\t\t\t// A&S 16.4.3:\n\t\t\tphi1 = ( 1 << N ) * ( u * a );\n\t\t\twhile ( N > 1 ) {\n\t\t\t\tN -= 1;\n\t\t\t\tphi1 = 0.5 * ( phi1 + asin( ca[ N ] * sin( phi1 ) ) );\n\t\t\t}\n\t\t\tphi0 = 0.5 * ( phi1 + asin( ca[ 0 ] * sin( phi1 ) ) );\n\n\t\t\tam = phi0;\n\t\t\tsincos( am, tmp2, 1, 0 );\n\t\t\tsn = tmp2[ 0 ];\n\t\t\tcn = tmp2[ 1 ];\n\n\t\t\t// When the denominator is small, switch to the definition of dn in terms of sn. Otherwise compute dn from the last two iterates.\n\t\t\tdnDenom = cos( phi1 - phi0 );\n\t\t\tif ( abs( dnDenom ) < 0.1 ) {\n\t\t\t\tdn = sqrt( 1.0 - ( m * sn * sn ) );\n\t\t\t} else {\n\t\t\t\tdn = cn / dnDenom;\n\t\t\t}\n\t\t}\n\t}\n\n\tout[ offset ] = sn;\n\tout[ offset + stride ] = cn;\n\tout[ offset + ( stride * 2 ) ] = dn;\n\tout[ offset + ( stride * 3 ) ] = am;\n\n\treturn out;\n}\n\nmodule.exports = assign;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\n/**\n* Simultaneously computes the Jacobi elliptic functions sn, cn, and dn, and am.\n*\n* ## Notes\n*\n* -   Values are computed using the arithmetic-geometric from Abramowitz and Stegun 16.4.\n* -   When m < 0 or m > 1, `sn`, `cn`, and `dn` are computed in terms of elliptic functions with 0 < m < 1 using the transformations from Abramowitz and Stegun 16.10 and 16.11, respectively. Thus the domain of m is any real number. When m < 0 or m > 1, `am` is not computed and will be returned as NaN.\n* -   Values for small m (m < SQRT_EPS) are computed using the approximations of Abramowitz and Stegun 16.13. For each evaluation, the complete elliptic integral of the first kind, K(m), is computed in order to reduce the period and ensure valid output for all u.\n* -   Values for m near unity (m > 1 - SQRT_EPS) are computed using the approximations of Abramowitz and Stegun 16.15. For each evaluation, the complete elliptic integral of the first kind, K(m), is computed in order to reduce the period and ensure valid output for all u.\n*\n* @param {number} u - input value\n* @param {number} m - modulus `m`, equivalent to `k\u00B2`\n* @returns {Array<number>} sn, cn, dn, and Jacobi amplitude am\n*\n* @example\n* var v = ellipj( 0.3, 0.5 );\n* // returns [ ~0.293, ~0.956, ~0.978, ~0.298 ]\n*\n* @example\n* v = ellipj( 0.0, 0.0 );\n* // returns [ ~0.0, ~1.0, ~1.0, ~0.0 ]\n*\n* @example\n* v = ellipj( Infinity, 1.0 );\n* // returns [ ~1.0, ~0.0, ~0.0, ~1.571 ]\n*\n* @example\n* v = ellipj( 0.0, -2.0 );\n* // returns [ ~0.0, ~1.0, ~1.0, NaN ]\n*\n* @example\n* v = ellipj( NaN, NaN );\n* // returns [ NaN, NaN, NaN, NaN ]\n*\n*/\nfunction ellipj( u, m ) {\n\treturn assign( u, m, [ 0.0, 0.0, 0.0, 0.0 ], 1, 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ellipj;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar assign = require( './assign.js' );\n\n\n// VARIABLES //\n\nvar tmp = [ 0.0, 0.0, 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Compute the Jacobi elliptic function sn(u, m) of number u with modulus m.\n*\n* @param {number} u - input value\n* @param {number} m - modulus `m`, equivalent to `k\u00B2`\n* @returns {number} sn(u, m)\n*\n* @example\n* var sn = require( '@stdlib/math-base-special-ellipj' ).sn;\n* var v = sn( 0.3, 0.5 );\n* // returns ~0.293\n*\n* @example\n* v = sn( 0.0, 0.0 );\n* // returns ~0.0\n*\n* @example\n* v = sn( Infinity, 1.0 );\n* // returns ~1.0\n*\n* @example\n* v = sn( 0.0, -2.0 );\n* // returns ~0.0\n*\n* @example\n* v = sn( NaN, NaN );\n* // returns NaN\n*\n*/\nfunction sn( u, m ) {\n\tassign( u, m, tmp, 1, 0 );\n\treturn tmp[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = sn;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar assign = require( './assign.js' );\n\n\n// VARIABLES //\n\nvar tmp = [ 0.0, 0.0, 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Compute the Jacobi elliptic function cn(u, m) of number u with modulus m.\n*\n* @param {number} u - input value\n* @param {number} m - modulus `m`, equivalent to `k\u00B2`\n* @returns {number} cn(u, m)\n*\n* @example\n* var v = cn( 0.3, 0.5 );\n* // returns ~0.956\n*\n* @example\n* v = cn( 0.0, 0.0 );\n* // returns ~1.0\n*\n* @example\n* v = cn( Infinity, 1.0 );\n* // returns ~0.0\n*\n* @example\n* v = cn( 0.0, -2.0 );\n* // returns ~1.0\n*\n* @example\n* v = cn( NaN, NaN );\n* // returns NaN\n*\n*/\nfunction cn( u, m ) {\n\tassign( u, m, tmp, 1, 0 );\n\treturn tmp[ 1 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = cn;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar assign = require( './assign.js' );\n\n\n// VARIABLES //\n\nvar tmp = [ 0.0, 0.0, 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Compute the Jacobi elliptic function dn(u, m) of number u with modulus m.\n*\n* @param {number} u - input value\n* @param {number} m - modulus `m`, equivalent to `k\u00B2`\n* @returns {number} dn(u, m)\n*\n* @example\n* var v = dn( 0.3, 0.5 );\n* // returns ~0.978\n*\n* @example\n* v = dn( 0.0, 0.0 );\n* // returns ~1.0\n*\n* @example\n* v = dn( Infinity, 1.0 );\n* // returns ~0.0\n*\n* @example\n* v = dn( 0.0, -2.0 );\n* // returns ~1.0\n*\n* @example\n* v = dn( NaN, NaN );\n* // returns NaN\n*\n*/\nfunction dn( u, m ) {\n\tassign( u, m, tmp, 1, 0 );\n\treturn tmp[ 2 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = dn;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar assign = require( './assign.js' );\n\n\n// VARIABLES //\n\nvar tmp = [ 0.0, 0.0, 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Compute the Jacobi modulus, am(u, m), of number u with modulus m.\n*\n* @param {number} u - input value\n* @param {number} m - modulus `m`, equivalent to `k\u00B2`\n* @returns {number} Jacobi amplitude, `am`\n*\n* @example\n* var v = am( 0.3, 0.5 );\n* // returns ~0.298\n*\n* @example\n* v = am( 0.0, 0.0 );\n* // returns ~0.0\n*\n* @example\n* v = am( Infinity, 1.0 );\n* // returns ~1.571\n*\n* @example\n* v = am( 0.0, -2.0 );\n* // returns NaN\n*\n* @example\n* v = am( NaN, NaN );\n* // returns NaN\n*\n*/\nfunction am( u, m ) {\n\tassign( u, m, tmp, 1, 0 );\n\treturn tmp[ 3 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = am;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the Jacobi elliptic functions sn, cn, dn, and Jacobi amplitude am.\n*\n* @module @stdlib/math-base-special-ellipj\n*\n* @example\n* var ellipj = require( '@stdlib/math-base-special-ellipj' );\n*\n* var v = ellipj( 0.3, 0.5 );\n* // returns [ ~0.293, ~0.956, ~0.978, ~0.298 ]\n*\n* v = ellipj( 0.0, 0.0 );\n* // returns [ ~0.0, ~1.0, ~1.0, ~0.0 ]\n*\n* v = ellipj( Infinity, 1.0 );\n* // returns [ ~1.0, ~0.0, ~0.0, ~1.571 ]\n*\n* v = ellipj( 0.0, -2.0 );\n* // returns [ ~0.0, ~1.0, ~1.0, NaN ]\n*\n* v = ellipj( NaN, NaN );\n* // returns [ NaN, NaN, NaN, NaN ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar assign = require( './assign.js' );\nvar main = require( './main.js' );\nvar sn = require( './sn.js' );\nvar cn = require( './cn.js' );\nvar dn = require( './dn.js' );\nvar am = require( './am.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\nsetReadOnly( main, 'sn', sn );\nsetReadOnly( main, 'cn', cn );\nsetReadOnly( main, 'dn', dn );\nsetReadOnly( main, 'am', am );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_assign", "__commonJSMin", "exports", "module", "logger", "sincos", "ellipk", "floor", "sqrt", "cosh", "sinh", "tanh", "atan", "asin", "sin", "cos", "abs", "SQRT_EPS", "EPS", "PI", "debug", "tmp4", "tmp2", "ca", "assign", "u", "m", "out", "stride", "offset", "dnDenom", "NANFLG", "uK2cen", "k1inv", "sechu", "sinhu", "tanhu", "phi0", "phi1", "atmp", "FLG", "gdu", "uK2", "uK4", "mu", "K2", "K4", "u0", "sn", "cn", "dn", "am", "k", "s", "c", "f", "a", "b", "N", "require_main", "__commonJSMin", "exports", "module", "assign", "ellipj", "u", "m", "require_sn", "__commonJSMin", "exports", "module", "assign", "tmp", "sn", "u", "m", "require_cn", "__commonJSMin", "exports", "module", "assign", "tmp", "cn", "u", "m", "require_dn", "__commonJSMin", "exports", "module", "assign", "tmp", "dn", "u", "m", "require_am", "__commonJSMin", "exports", "module", "assign", "tmp", "am", "u", "m", "setReadOnly", "assign", "main", "sn", "cn", "dn", "am"]
}
